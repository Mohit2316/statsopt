<!DOCTYPE html>
<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js"> <!--<![endif]-->
<head>
  <!-- Page Rendered At: 2015-06-29 16:29:24 -0700
   /\\\\\
  /\\\///\\\          /\\\\\\\\\\\\\      /\\\\\\\\\     /\\\             /\\\\\\\\\     /\\\\\     /\\\  /\\\\\\\\\\\\\\\  /\\\\\\\\\\\    /\\\\\\\\\
 /\\\/  \///\\\       \/\\\/////////\\\  /\\\\\\\\\\\\\  \/\\\           /\\\\\\\\\\\\\  \/\\\\\\   \/\\\ \///////\\\/////  \/////\\\///   /\\\///////\\\
 /\\\      \//\\\      \/\\\       \/\\\ /\\\/////////\\\ \/\\\          /\\\/////////\\\ \/\\\/\\\  \/\\\       \/\\\           \/\\\     \/\\\     \/\\\
 \/\\\       \/\\\      \/\\\\\\\\\\\\\/ \/\\\       \/\\\ \/\\\         \/\\\       \/\\\ \/\\\//\\\ \/\\\       \/\\\           \/\\\     \/\\\\\\\\\\\/
  \//\\\      /\\\       \/\\\/////////   \/\\\\\\\\\\\\\\\ \/\\\         \/\\\\\\\\\\\\\\\ \/\\\\//\\\\/\\\       \/\\\           \/\\\     \/\\\//////\\\
    \///\\\  /\\\         \/\\\            \/\\\/////////\\\ \/\\\         \/\\\/////////\\\ \/\\\ \//\\\/\\\       \/\\\           \/\\\     \/\\\    \//\\\
       \///\\\\\/          \/\\\            \/\\\       \/\\\ \/\\\         \/\\\       \/\\\ \/\\\  \//\\\\\\       \/\\\           \/\\\     \/\\\     \//\\\
  /\\\   \/////   /\\\      \/\\\            \/\\\       \/\\\ \/\\\\\\\\\\\ \/\\\       \/\\\ \/\\\   \//\\\\\       \/\\\        /\\\\\\\\\\\ \/\\\      \//\\\
    \//\\\       /\\\        \///             \///        \///  \///////////  \///        \///  \///     \/////        \///        \///////////  \///        \///
      \//\\\    /\\\
          \//\\\\\
-->
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link rel="shortcut icon" href="/favicon.ico" sizes="16x16 32x32" type="image/x-icon">
<title>Model-View-Adapter | Palantir</title>
<meta name="viewport" content="width=device-width,user-scalable=no,initial-scale=1.0">
<meta name="apple-mobile-web-app-capable" content="yes">

<meta name="description" content="Palantir builds software that connects data, technologies, humans and environments.">

<meta name="keywords" content="Palantir, home, data, technology, software, solutions, environments, analysis">
<link rel="stylesheet" href="/build/css/style.css?v=20150629162924" media="screen">
<link rel="alternate" type="application/rss+xml"  href="https://palantir.com/feed/index.xml" title="Palantir RSS">
<!-- Modernizr -->
<script src="/build/js/modernizr-custom-2.8.2.min.js"></script>

<!--[if lt IE 9]>
<script src="/build/js/respond-1.4.2.min.js"></script>
<link rel="stylesheet" href="/build/css/ie.css?v=20150629162924" media="screen, projection" type="text/css">
<![endif]-->

  <!-- OpenGraph -->
  <meta property="og:title" content="Model-View-Adapter">
<meta property="og:type" content="website">
<meta property="og:url" content="https://palantir.com/2009/04/model-view-adapter">

<meta property="og:image" content="">

<meta property="og:site_name" content="Palantir">
<meta property="og:description" content="">


</head>
<body id="blog" class="blog-post">
  <div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&appId=448433878601301&version=v2.0";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

  <div id="site-wrapper">
    <!-- Header -->
    
<header id="site-header">
  <!-- Nav: Main -->
  <nav class="navbar" role="navigation">
    <div class="container-fluid">

      <div class="navbar-header">
        <!-- Logo -->
        <h1 id="site-name" class="logo">
          <a href="/">
            <div id="logo-svg">
              <!--[if gte IE 9]><!-->
                <svg width="100" height="25" viewBox="0 0 100 25" xmlns="http://www.w3.org/2000/svg">
                  <path d="M24.076 2.98h6.237c2.27 0 3.814.139 5.092 1.548.935.992 1.373 2.302 1.373 3.75 0 1.468-.458 2.738-1.469 3.79-.992 1.012-2.27 1.667-5.626 1.667h-3.013v8.611h-2.575v-19.365h-.019zm2.575 8.492h3.071c1.717 0 4.31-.139 4.31-3.294 0-3.036-2.422-3.036-3.776-3.036h-3.605v6.329z"/><path d="M45.132 22.365c-.191-.675-.229-1.31-.229-2.024-1.163 2.222-2.918 2.44-4.005 2.44-2.975 0-4.558-1.746-4.558-3.968 0-1.071.362-2.798 2.27-3.948 1.392-.813 3.452-.893 4.482-.893.61 0 1.011.02 1.755.079 0-1.667 0-2.401-.458-2.976-.496-.675-1.545-.893-2.251-.893-2.441 0-2.575 1.746-2.613 2.282h-2.422c.076-.694.153-1.647.896-2.56.992-1.131 2.823-1.448 4.177-1.448 1.888 0 3.891.615 4.596 1.984.42.813.439 1.448.439 2.063l-.095 6.448c0 .218.019 2.024.21 3.373h-2.193v.04zm-1.678-6.647c-.973 0-4.673 0-4.673 2.738 0 .853.515 2.341 2.689 2.341 1.24 0 2.174-.516 2.765-1.448.534-.913.572-1.667.61-3.552-.439-.04-.801-.079-1.392-.079z" id="a"/><path d="M49.366 2.98h2.422v19.385h-2.422v-19.385z"/><path d="M62.24 22.365c-.172-.675-.229-1.31-.229-2.024-1.163 2.222-2.918 2.44-4.005 2.44-2.975 0-4.577-1.746-4.577-3.968 0-1.071.362-2.798 2.27-3.948 1.392-.813 3.452-.893 4.482-.893.61 0 1.011.02 1.755.079 0-1.667 0-2.401-.458-2.976-.496-.675-1.545-.893-2.251-.893-2.46 0-2.575 1.746-2.613 2.282h-2.422c.076-.694.153-1.647.896-2.56.973-1.131 2.823-1.448 4.177-1.448 1.888 0 3.891.615 4.596 1.984.42.813.439 1.448.439 2.063l-.095 6.448c0 .218.019 2.024.21 3.373h-2.174v.04zm-1.697-6.647c-.973 0-4.673 0-4.673 2.738 0 .853.515 2.341 2.689 2.341 1.24 0 2.174-.516 2.765-1.448.534-.913.572-1.667.61-3.552-.42-.04-.782-.079-1.392-.079z"/><path d="M66.493 10.44l-.019-1.567h2.422l.019 2.183c.286-.556 1.202-2.44 4.158-2.44 1.163 0 4.692.456 4.692 4.583v9.147h-2.479v-8.571c0-.893-.095-1.687-.706-2.302-.629-.615-1.469-.913-2.289-.913-1.755 0-3.376 1.31-3.376 4.028v7.758h-2.422v-11.905z"/><path d="M78.528 8.873h2.289v-2.877l2.403-.813v3.671h2.899v1.845h-2.899v8.036c0 .675 0 1.806 1.736 1.806.496 0 .954-.079 1.163-.139v1.964c-.439.079-1.144.159-2.022.159-2.212 0-3.28-.675-3.28-2.877v-8.909h-2.289v-1.865z"/><path d="M87.816 2.98h2.918v2.817h-2.918v-2.817zm.267 5.893h2.422v13.472h-2.422v-13.472z"/><path d="M92.755 11.611c0-.913-.057-1.845-.134-2.738h2.46l.057 2.599c.458-1.885 2.022-2.5 3.09-2.659.725-.099 1.259-.079 1.678-.06v2.46c-.134-.06-.286-.079-.458-.099-.172-.02-.42-.02-.706-.02-2.861 0-3.547 1.766-3.547 4.087v7.163h-2.441v-10.734z"/><path d="M9.866-.04c-5.211 0-9.45 4.226-9.45 9.464s4.22 9.464 9.45 9.464c5.211 0 9.45-4.226 9.45-9.464s-4.24-9.464-9.45-9.464zm0 16.012c-3.606 0-6.538-2.937-6.538-6.548s2.932-6.548 6.538-6.548c3.606 0 6.538 2.937 6.538 6.548-.02 3.631-2.932 6.548-6.538 6.548zM18.306 18.056l-8.44 3.651-8.46-3.651-1.387 2.698 9.847 4.206 9.847-4.206-1.407-2.698z"/>
              <!--<![endif]-->
              </svg>
            </div>
          </a>
        </h1>
        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#main-navbar">
          <span class="sr-only">Toggle navigation</span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
      </div>

      <div class="collapse navbar-collapse" id="main-navbar">
        <ul class="nav navbar-nav">
          <li>
            <a href="/products/">Products</a>
            <ul class="dropdown-menu">
              <li><a href="/palantir-gotham/">Palantir Gotham</a></li>
              <li><a href="/palantir-metropolis/">Palantir Metropolis</a></li>
            </ul>
          </li>
          <li>
            <a href="/solutions/">Solutions</a>
            <ul class="dropdown-menu split-menu">
              
              <li><a href="/solutions/anti-fraud/" title="Anti Fraud">Anti Fraud</a></li>
              
              <li><a href="/solutions/capital-markets/" title="Capital Markets">Capital Markets</a></li>
              
              <li><a href="/solutions/case-management/" title="Case Management">Case Management</a></li>
              
              <li><a href="/disaster-preparedness/" title="Crisis Response">Crisis Response</a></li>
              
              <li><a href="/solutions/cyber/" title="Cyber Security">Cyber Security</a></li>
              
              <li><a href="/solutions/defense/" title="Defense">Defense</a></li>
              
              <li><a href="/disaster-preparedness/" title="Disaster Preparedness">Disaster Preparedness</a></li>
              
              <li><a href="/solutions/disease-response/" title="Disease Response">Disease Response</a></li>
              
              <li><a href="/solutions/healthcare-delivery/" title="Healthcare Delivery">Healthcare Delivery</a></li>
              
              <li><a href="/solutions/insider-threat/" title="Insider Threat">Insider Threat</a></li>
              
              <li><a href="/solutions/insurance-analytics" title="Insurance Analytics">Insurance Analytics</a></li>
              
              <li><a href="/solutions/intelligence/" title="Intelligence">Intelligence</a></li>
              
              <li><a href="/solutions/law-enforcement/" title="Law Enforcement">Law Enforcement</a></li>
              
              <li><a href="/solutions/legal-intelligence/" title="Legal Intelligence">Legal Intelligence</a></li>
              
              <li><a href="/solutions/palantir-verus/" title="Palantir Verus">Palantir Verus</a></li>
              
              <li><a href="/solutions/pharma/" title="Pharma R&amp;D">Pharma R&amp;D</a></li>
              
              <li><a href="/solutions/trader-oversight/" title="Trader Oversight">Trader Oversight</a></li>
              
              <li><a href="/solutions/custom-solutions/" title="Custom Solutions">Custom Solutions</a></li>
              
            </ul>
          </li>
          <li>
            <a href="/careers/">Careers</a>
            <ul class="dropdown-menu">
              
              <li><a href="/engineering-culture/" title="Engineering Culture">Engineering Culture</a></li>
              
              <li><a href="/life-at-palantir/" title="Life at Palantir">Life at Palantir</a></li>
              
              <li><a href="/getting-hired/" title="Getting Hired">Getting Hired</a></li>
              
              <li><a href="/college/" title="Students">Students</a></li>
              
              <li><a href="/careers/" title="Explore Careers">Explore Careers</a></li>
              
            </ul>
          </li>
          <li>
            <a href="/about/">About</a>
            <ul class="dropdown-menu">
              <li><a href="/what-we-believe/">What We Believe</a></li>
              <li><a href="/philanthropy-engineering/">Philanthropy Engineering</a></li>
              <li><a href="/library/">Library</a></li>
              <li><a href="/media/">Media</a></li>
            </ul>
          </li>
        </ul>
        <ul class="nav navbar-nav secondary">
          <li><a href="/contact/">Contact</a></li>
          <li><a href="/category/blogs/">Blog</a></li>
          <li class="search-form">
            <form role="search" method="get" class="search" action="/search/">
              <input id="main-search-query" type="text" name="q" value="" class="search-input search_field_main" maxlength="50" placeholder="Search Palantir">
              <input type="submit" class="search-trigger search_submit_main">
            </form>
          </li>
        </ul>
      </div><!-- /.navbar-collapse -->

    </div><!-- /.container-fluid -->
  </nav>


</header><!-- /header -->


    <div id="hero-wrapper-auto" data-image-bg='["/build/images/blog/blog-hero.jpg", "/build/images/blog/blog-hero@2x.jpg"]'>
      <div class="container">
        <div class="row block block-hero block-centered">
          <article class="col-xs-12">
            <h1 class="main"><a href="/category/blogs">The Palantir Blog</a></h1>
          </article>
        </div><!-- /.row -->
      </div><!-- /.container -->
      <div id="hero-subnav">
        <div class="container">
          <div class="row">
            <div class="col-md-8 col-md-offset-2">
              <nav>
                <ul class="blog-meta transparent">
                  <li class="blog-meta-date"><span class="icon-pt-icon-time"></span> April 20, 2009</li>
                  <li class="blog-meta-author"><span class="icon-pt-icon-person"></span> <a href="/author/ksimler">Kevin Simler</a></li>
                  
                  <li class="post_tags">
                    <span class="icon-pt-icon-tag"></span>
                    
                    <span class="tags"><a href="/tag/coding">coding</a></span>
                    
                    <span class="tags"><a href="/tag/swing">swing</a></span>
                    
                    <span class="tags"><a href="/tag/javatech">javatech</a></span>
                    
                  </li>
                  
                </ul>
              </nav>
            </div>
          </div>
        </div>
      </div>
    </div><!-- /#hero-wrapper-auto -->

    <!-- Page Content -->
    <div class="container">
      <div class="row">
        <div id="post-content" class="col-md-offset-1 col-md-7">
          <h1>Model-View-Adapter</h1>
          <p>I used to think I understood MVC.  In undergraduate CS programs, MVC is taught as an off-the-shelf pattern, explained once and then ready for use in the real world.  Wikipedia also makes it seem pretty simple:</p>

<blockquote>
  <p><a href="http://en.wikipedia.org/wiki/Model-view-controller">Model–View–Controller (MVC)</a> is an architectural pattern used in software engineering. Successful use of the pattern isolates business logic from user interface considerations, resulting in an application where it is easier to modify either the visual appearance of the application or the underlying business rules without affecting the other. In MVC, the model represents the information (the data) of the application; the view corresponds to elements of the user interface such as text, checkbox items, and so forth; and the controller manages the communication of data and the business rules used to manipulate the data to and from the model.</p>
</blockquote>

<p>They go on to show the classic triangle diagram and how it’s baked into various GUI and web frameworks.  There’s only one clause in the entire article that hints at something deeper:  “Though MVC comes in different flavors…”</p>

<p>Different flavors indeed.  In fact MVC is not just <em>a</em> pattern but a whole family of patterns:  <a href="http://en.wikipedia.org/wiki/Model-view-controller">MVC</a>, <a href="http://en.wikipedia.org/wiki/Model-view-adapter">MVA</a>, <a href="http://en.wikipedia.org/wiki/Model_View_Presenter">MVP</a>, <a href="http://en.wikipedia.org/wiki/Presentation-abstraction-control">PAC</a>, <a href="http://c2.com/cgi/wiki?ModelDelegate">Model-Delegate</a>….  It very quickly gets very hairy.</p>

<p>In this article I want to describe one of MVC’s lesser-known variants, the <a href="http://en.wikipedia.org/wiki/Model-view-adapter">Model-View-Adapter (MVA) pattern</a>, and talk about its advantages over traditional MVC in the context of a Java Swing application.</p>

<h2 id="architecture">Architecture</h2>

<p>The best place to start is with an architecture diagram.  While vanilla MVC is a triangle:</p>

<p><a href="/wp-assets/wp-content/static/techblog/2009/04/mvc.png"><img src="/wp-assets/wp-content/static/techblog/2009/04/mvc.png" alt="Model-View-Controller" title="mvc" /></a></p>

<p>MVA puts the Adapter in a position to strictly mediate between Model and View:</p>

<p><a href="/wp-assets/wp-content/static/techblog/2009/04/mva.png"><img src="/wp-assets/wp-content/static/techblog/2009/04/mva.png" alt="Model-View-Adapter" title="mva" /></a></p>

<p>Here a solid line represents a direct relationship while a dashed line represents an indirect relationship via the Observer pattern.  Put another way, the Adapter holds a pointer both to the Model and to the View and directly calls methods on both.  At the same time, it attaches itself as a listener both to the Model and to the View in order to receive events.  It receives property change events from the Model and action events (checkbox ticked, text entered, etc.) from the View, and then routes appropriate changes to the other side.  The Adapter is entirely responsible for keeping the Model and the View in sync; the Model and View are both relatively dumb structures, knowing nothing about the other.</p>

<p>The advantages to organizing code this way are:</p>

<ul>
  <li>All “moving parts” are centralized in one place, the Adapter.  No worrying about where to add a listener; no hunting around to find isolated listeners.</li>
  <li>Separation of concerns between the View and the Adapter.  The View is responsible for layout and visual presentation while the Adapter is responsible for synchronization and the dynamic aspects of the user interface.</li>
  <li>Better decoupling between Models and Views.  Specifically, the View doesn’t need to know anything about the Model.</li>
</ul>

<p>Additionally, while it will never be possible to fully <a href="http://se.ethz.ch/~meyer/publications/patterns/visitor.pdf">componentize </a> any variant of the MVC pattern, MVA is more amenable to componentization and thus more of its implementation can be centralized (in a single class) and reused.  Once componentized, we can augment the basic functionality with things like:</p>

<ul>
  <li>Automatic registration and unregistration of listeners when the View enters and exits the Swing component hierarchy, thereby preventing certain kinds of memory leaks.</li>
  <li>Automatic unregistration of listeners when the program shuts down.  This can help free up resources like realtime subscriptions.</li>
  <li>Method for swapping a new Model object in for an old Model object.</li>
  <li>Ability to execute a task without listeners attached, to help prevent event-action-event loops.</li>
</ul>

<p>The downside to using MVA over MVC is that the Adapter tends to take on a lot of the responsibility and can get quite complicated.  But in my experience that can be mitigated by having good conventions about which pieces (M, V, A) are allowed to communicate with which other pieces and at what times.  Enforcing predictable control flow goes a long way toward managing complexity.</p>

<p>Read on for a code-level description of our implementation of the MVA pattern.</p>

<h2 id="palantir-mva-implementation">Palantir MVA Implementation</h2>

<p>Our half-componentization of MVA resides in a single abstract class named Adapter:</p>

<div class="highlight"><pre><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">Adapter</span><span class="o">&lt;</span><span class="n">ViewType</span> <span class="kd">extends</span> <span class="n">Component</span><span class="o">,</span> <span class="n">ModelType</span><span class="o">&gt;</span> <span class="o">{</span>
  <span class="c1">// constructor</span>
  <span class="kd">protected</span> <span class="nf">Adapter</span><span class="o">(</span><span class="n">ViewType</span> <span class="n">view</span><span class="o">,</span> <span class="n">ModelType</span> <span class="n">model</span><span class="o">);</span> <span class="o">{</span> <span class="o">...</span> <span class="o">}</span>
  <span class="cm">/**</span>
<span class="cm">  * Attach listeners to the View&#39;s subcomponents (checkboxes etc.).</span>
<span class="cm">  * Listeners should be stored as member variables in the Adapter</span>
<span class="cm">  * subclass.</span>
<span class="cm">  */</span>
  <span class="kd">protected</span> <span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">registerViewListeners</span><span class="o">();</span>
  <span class="cm">/**</span>
<span class="cm">  * Detach the same listeners (member variables) that were</span>
<span class="cm">  * attached in registerViewListeners().</span>
<span class="cm">  */</span>
  <span class="kd">protected</span> <span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">unregisterViewListeners</span><span class="o">();</span>
  <span class="cm">/**</span>
<span class="cm">  * Attach listener(s) to the Model.</span>
<span class="cm">  */</span>
  <span class="kd">protected</span> <span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">registerModelListeners</span><span class="o">();</span>
  <span class="cm">/**</span>
<span class="cm">  * Detach the same listeners (member variables) that were</span>
<span class="cm">  * attached in registerModelListeners().</span>
<span class="cm">  */</span>
  <span class="kd">protected</span> <span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">unregisterModelListeners</span><span class="o">();</span>
  <span class="cm">/**</span>
<span class="cm">  * Bring the View fully in synch with the Model.  Typically</span>
<span class="cm">  * this involves querying state from the Model and</span>
<span class="cm">  * reconfiguring subcomponents of the View accordingly.</span>
<span class="cm">  */</span>
  <span class="kd">protected</span> <span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">fullSynchronize</span><span class="o">();</span>
  <span class="kd">protected</span> <span class="n">ModelType</span> <span class="nf">getModel</span><span class="o">()</span> <span class="o">{</span> <span class="o">...</span> <span class="o">}</span>
  <span class="kd">protected</span> <span class="n">ViewType</span> <span class="nf">getView</span><span class="o">()</span> <span class="o">{</span> <span class="o">...</span> <span class="o">}</span>
  <span class="c1">// other methods elided</span>
<span class="o">}</span></code></pre></div>

<p>New View components that want to stay synchronized with a Model must instantiate a subclass of Adapter and implement the abstract methods.  The Adapter parent class (itself an example of the Template Method design pattern) will then call into the appropriate abstract methods at the appropriate times.  For example, after the View is constructed, as soon as it’s displayed in the Swing component hierarchy the Adapter parent class will automatically call fullSynchronize() (whose implementation should bring the View in line with the Model) and then registerViewListeners() and registerModelListeners(), so the Adapter is poised to react to events.  Likewise, when the View is removed from the component hierarchy (when its containing frame is closed, say), both unregisterViewListeners() and unregisterModelListeners() will be called.  This can help ensure that no memory will be leaked when a long-life-cycle object (like a system-wide singleton) retains a pointer to a short-life-cycle object (the View) via the Observer pattern.</p>

<h2 id="dealing-with-listener-loops">Dealing With Listener Loops</h2>

<p>One problem that confronts UI developers is the problem of “listener loops”:  infinite loops that result when the View fires an event, the Adapter (or Controller) responds to it by setting some property on the Model, and an event is propagated from the Model back to the View, starting the whole cycle over again.</p>

<p>One way to combat this is to make sure your Model only fires events when the value that’s being set on the Model is different from the value currently stored in the Model.  (This will cut off the infinite loop after one and a half cycles.)  It’s a good practice but often isn’t enough, especially when your system is multithreaded and events start to queue up.  You can sometimes get into situations where an M-V-C triplet will thrash forever between two different values for one of the Model’s properties.</p>

<p>Our solution to this problem is a protected method (on our Adapter base class) called runWithoutViewListeners:</p>

<div class="highlight"><pre><code class="language-java" data-lang="java"><span class="cm">/**</span>
<span class="cm">* Guarantees that the job r will be run:</span>
<span class="cm">*    - on the Swing thread</span>
<span class="cm">*    - with Model listeners attached</span>
<span class="cm">*    - with View listeners DEtached</span>
<span class="cm">*/</span>
<span class="kd">public</span> <span class="kd">final</span> <span class="kt">void</span> <span class="nf">runWithoutViewListeners</span><span class="o">(</span><span class="kd">final</span> <span class="n">Runnable</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span> <span class="o">...</span> <span class="o">}</span></code></pre></div>

<p>The implementation of this method checks to make sure the view listeners are attached when it’s called, detaches them via a call to unregisterViewListeners(), invokes the Runnable, then reattaches the view listeners via a call to registerViewListeners().  The code inside the Runnable can then make whatever changes it wants to the View without perturbing the Model downstream.  Listener loop averted!</p>

<h2 id="more-to-come">More To Come</h2>

<p>I hope that’s given you some sense of the territory out there in the wide world of MVC-variants.  In a week or two, Derek will show off some of the work he’s done on the M piece of the MVA triad related to “event bubbling.”  Stay tuned!</p>

        </div>
        <aside id="category-links" class="col-md-offset-1 col-md-3">
          <h4>Categories</h4>
          <nav id="blog-category-list">
  <ul>
  
    <li class="blog-category tech"><a href="/category/tech/" name="Tech">Tech</a></li>
  
    <li class="blog-category analysis"><a href="/category/analysis/" name="Analysis">Analysis</a></li>
  
    <li class="blog-category news-events"><a href="/category/news-events/" name="News &amp; Events">News &amp; Events</a></li>
  
    <li class="blog-category philanthropy"><a href="/category/philanthropy/" name="Philanthropy">Philanthropy</a></li>
  
    <li class="blog-category pcl"><a href="/category/pcl/" name="P/CL">P/CL</a></li>
  
  </ul>
</nav>

          <h4>Save &amp; Share</h4>
          
<nav id="blog-share">
  <ul>
    <li><a href="/feed/index.xml" class="button button-small no-arrow"><span class="icon-pt-icon-feed"></span> Subscribe via RSS</a></li>
    <li><div class="fb-share-button" data-href="https://palantir.com/2009/04/model-view-adapter" data-type="button_count"></div></li>
    <li><a href="https://twitter.com/share" class="twitter-share-button" data-via="twitterapi" data-lang="en">Tweet</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="https://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script></li>
  </ul>
</nav>

        </aside>
      </div>
    </div>

    <!-- Footer -->
    <footer class="" role="contentinfo">

  <div class="container">
        <div class="row">
          <nav id="products" class="col-sm-2 footer-menu">
            <h2><a href="/products">Products</a></h2>
            <ul id="menu-products">
              <li><a href="/palantir-gotham/" title="Palantir Gotham">Palantir Gotham</a></li>
              <li><a href="/palantir-metropolis/" title="Palantir Metropolis">Palantir Metropolis</a></li>
            </ul>
          </nav>

          <nav id="uses" class="col-sm-4 footer-menu">
            <h2><a href="/solutions">Solutions</a></h2>
            <ul id="menu-uses">
              
              <li><a href="/solutions/anti-fraud/" title="Anti Fraud">Anti Fraud</a></li>
              
              <li><a href="/solutions/capital-markets/" title="Capital Markets">Capital Markets</a></li>
              
              <li><a href="/solutions/case-management/" title="Case Management">Case Management</a></li>
              
              <li><a href="/disaster-preparedness/" title="Crisis Response">Crisis Response</a></li>
              
              <li><a href="/solutions/cyber/" title="Cyber Security">Cyber Security</a></li>
              
              <li><a href="/solutions/defense/" title="Defense">Defense</a></li>
              
              <li><a href="/disaster-preparedness/" title="Disaster Preparedness">Disaster Preparedness</a></li>
              
              <li><a href="/solutions/disease-response/" title="Disease Response">Disease Response</a></li>
              
              <li><a href="/solutions/healthcare-delivery/" title="Healthcare Delivery">Healthcare Delivery</a></li>
              
              <li><a href="/solutions/insider-threat/" title="Insider Threat">Insider Threat</a></li>
              
              <li><a href="/solutions/insurance-analytics" title="Insurance Analytics">Insurance Analytics</a></li>
              
              <li><a href="/solutions/intelligence/" title="Intelligence">Intelligence</a></li>
              
              <li><a href="/solutions/law-enforcement/" title="Law Enforcement">Law Enforcement</a></li>
              
              <li><a href="/solutions/legal-intelligence/" title="Legal Intelligence">Legal Intelligence</a></li>
              
              <li><a href="/solutions/palantir-verus/" title="Palantir Verus">Palantir Verus</a></li>
              
              <li><a href="/solutions/pharma/" title="Pharma R&amp;D">Pharma R&amp;D</a></li>
              
              <li><a href="/solutions/trader-oversight/" title="Trader Oversight">Trader Oversight</a></li>
              
              <li><a href="/solutions/custom-solutions/" title="Custom Solutions">Custom Solutions</a></li>
              
            </ul>
          </nav>

          <nav id="people" class="col-sm-2 footer-menu">
            <h2><a href="/careers/">Careers</a></h2>
            <ul id="menu-people" class="">
              
              <li><a href="/engineering-culture/" title="Engineering Culture">Engineering Culture</a></li>
              
              <li><a href="/life-at-palantir/" title="Life at Palantir">Life at Palantir</a></li>
              
              <li><a href="/getting-hired/" title="Getting Hired">Getting Hired</a></li>
              
              <li><a href="/college/" title="Students">Students</a></li>
              
              <li><a href="/careers/" title="Explore Careers">Explore Careers</a></li>
              
            </ul>
          </nav>

          <nav id="about" class="col-sm-2 footer-menu">
            <h2><a href="/about">About</a></h2>
            <ul id="menu-about">
              <li><a href="/what-we-believe/">What We Believe</a></li>
              <li><a href="/philanthropy-engineering/">Philanthropy Engineering</a></li>
              <li><a href="/library/">Library</a></li>
              <li><a href="/media/">Media</a></li>
            </ul>
          </nav>

          <nav id="ancillary-menu" class="col-sm-2 footer-menu">
            <ul id="menu-ancillary">
              <li><a href="https://support.palantir.com/">Support Portal</a></li>
              <li><a href="/partnerships/">Partnerships</a></li>
              <li><a href="/site-map/">Site Map</a></li>
            </ul>
          </nav>
        </div><!-- /.row -->

        <div id="footer-copyright" class="row">
          <div class="col-sm-12 sub-footer">
            <span class="legalese">&copy; 2015 Palantir Technologies</span>
            <a class="legalese" href="/terms-and-conditions/">Terms of Use</a>
            <a class="legalese" href="/privacy-and-security/">Privacy and Security Statement</a>
            <ul class="social">
              <li><a href="https://www.facebook.com/Palantir" class="icon-pt-icon-facebook"></a></li>
              <li><a href="https://www.twitter.com/palantirtech" class="icon-pt-icon-twitter"></a></li>
              <li><a href="https://plus.google.com/106671163751935200511" rel="publisher" class="icon-pt-icon-gplus"></a></li>
              <li><a href="https://www.github.com/Palantir" class="icon-pt-icon-github"></a></li>
              <li><a href="https://www.youtube.com/user/Palantir" class="icon-pt-icon-youtube"></a></li>
            </ul>
          </div>
        </div><!-- /.row -->

  </div><!-- /.container -->

</footer><!-- /footer -->

  </div><!-- /#site-wrapper -->

  <!-- compiled.min -->
  <script src="/build/js/compiled.min.js?v=20150629162924"></script>

  
<!-- Google Analytics -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-380822-1', 'none');
  ga('send', 'pageview');
</script>


  <script>
  window['_fs_debug'] = false;
  window['_fs_host'] = 'www.fullstory.com';
  window['_fs_org'] = 'Vcq';
  (function(m,n,e,t,l,o,g,y){
    g=m[e]=function(a,b){g.q?g.q.push([a,b]):g._api(a,b);};g.q=[];
    o=n.createElement(t);o.async=1;o.src='https://'+_fs_host+'/s/fs.js';
    y=n.getElementsByTagName(t)[0];y.parentNode.insertBefore(o,y);
    g.identify=function(i,v){g(l,{uid:i});if(v)g(l,v)};g.setUserVars=function(v){FS(l,v)};
    g.clearUserCookie=function(d,i){d=n.domain;while(1){n.cookie='fs_uid=;domain='+d+
    ';path=/;expires='+new Date(0);i=d.indexOf('.');if(i<0)break;d=d.slice(i+1)}}
  })(window,document,'FS','script','user');
</script>

</body>
</html>
