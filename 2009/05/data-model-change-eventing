<!DOCTYPE html>
<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js"> <!--<![endif]-->
<head>
  <!-- Page Rendered At: 2015-06-29 16:29:24 -0700
   /\\\\\
  /\\\///\\\          /\\\\\\\\\\\\\      /\\\\\\\\\     /\\\             /\\\\\\\\\     /\\\\\     /\\\  /\\\\\\\\\\\\\\\  /\\\\\\\\\\\    /\\\\\\\\\
 /\\\/  \///\\\       \/\\\/////////\\\  /\\\\\\\\\\\\\  \/\\\           /\\\\\\\\\\\\\  \/\\\\\\   \/\\\ \///////\\\/////  \/////\\\///   /\\\///////\\\
 /\\\      \//\\\      \/\\\       \/\\\ /\\\/////////\\\ \/\\\          /\\\/////////\\\ \/\\\/\\\  \/\\\       \/\\\           \/\\\     \/\\\     \/\\\
 \/\\\       \/\\\      \/\\\\\\\\\\\\\/ \/\\\       \/\\\ \/\\\         \/\\\       \/\\\ \/\\\//\\\ \/\\\       \/\\\           \/\\\     \/\\\\\\\\\\\/
  \//\\\      /\\\       \/\\\/////////   \/\\\\\\\\\\\\\\\ \/\\\         \/\\\\\\\\\\\\\\\ \/\\\\//\\\\/\\\       \/\\\           \/\\\     \/\\\//////\\\
    \///\\\  /\\\         \/\\\            \/\\\/////////\\\ \/\\\         \/\\\/////////\\\ \/\\\ \//\\\/\\\       \/\\\           \/\\\     \/\\\    \//\\\
       \///\\\\\/          \/\\\            \/\\\       \/\\\ \/\\\         \/\\\       \/\\\ \/\\\  \//\\\\\\       \/\\\           \/\\\     \/\\\     \//\\\
  /\\\   \/////   /\\\      \/\\\            \/\\\       \/\\\ \/\\\\\\\\\\\ \/\\\       \/\\\ \/\\\   \//\\\\\       \/\\\        /\\\\\\\\\\\ \/\\\      \//\\\
    \//\\\       /\\\        \///             \///        \///  \///////////  \///        \///  \///     \/////        \///        \///////////  \///        \///
      \//\\\    /\\\
          \//\\\\\
-->
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link rel="shortcut icon" href="/favicon.ico" sizes="16x16 32x32" type="image/x-icon">
<title>Data Model Change Eventing | Palantir</title>
<meta name="viewport" content="width=device-width,user-scalable=no,initial-scale=1.0">
<meta name="apple-mobile-web-app-capable" content="yes">

<meta name="description" content="Palantir builds software that connects data, technologies, humans and environments.">

<meta name="keywords" content="Palantir, home, data, technology, software, solutions, environments, analysis">
<link rel="stylesheet" href="/build/css/style.css?v=20150629162924" media="screen">
<link rel="alternate" type="application/rss+xml"  href="https://palantir.com/feed/index.xml" title="Palantir RSS">
<!-- Modernizr -->
<script src="/build/js/modernizr-custom-2.8.2.min.js"></script>

<!--[if lt IE 9]>
<script src="/build/js/respond-1.4.2.min.js"></script>
<link rel="stylesheet" href="/build/css/ie.css?v=20150629162924" media="screen, projection" type="text/css">
<![endif]-->

  <!-- OpenGraph -->
  <meta property="og:title" content="Data Model Change Eventing">
<meta property="og:type" content="website">
<meta property="og:url" content="https://palantir.com/2009/05/data-model-change-eventing">

<meta property="og:image" content="">

<meta property="og:site_name" content="Palantir">
<meta property="og:description" content="">


</head>
<body id="blog" class="blog-post">
  <div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&appId=448433878601301&version=v2.0";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

  <div id="site-wrapper">
    <!-- Header -->
    
<header id="site-header">
  <!-- Nav: Main -->
  <nav class="navbar" role="navigation">
    <div class="container-fluid">

      <div class="navbar-header">
        <!-- Logo -->
        <h1 id="site-name" class="logo">
          <a href="/">
            <div id="logo-svg">
              <!--[if gte IE 9]><!-->
                <svg width="100" height="25" viewBox="0 0 100 25" xmlns="http://www.w3.org/2000/svg">
                  <path d="M24.076 2.98h6.237c2.27 0 3.814.139 5.092 1.548.935.992 1.373 2.302 1.373 3.75 0 1.468-.458 2.738-1.469 3.79-.992 1.012-2.27 1.667-5.626 1.667h-3.013v8.611h-2.575v-19.365h-.019zm2.575 8.492h3.071c1.717 0 4.31-.139 4.31-3.294 0-3.036-2.422-3.036-3.776-3.036h-3.605v6.329z"/><path d="M45.132 22.365c-.191-.675-.229-1.31-.229-2.024-1.163 2.222-2.918 2.44-4.005 2.44-2.975 0-4.558-1.746-4.558-3.968 0-1.071.362-2.798 2.27-3.948 1.392-.813 3.452-.893 4.482-.893.61 0 1.011.02 1.755.079 0-1.667 0-2.401-.458-2.976-.496-.675-1.545-.893-2.251-.893-2.441 0-2.575 1.746-2.613 2.282h-2.422c.076-.694.153-1.647.896-2.56.992-1.131 2.823-1.448 4.177-1.448 1.888 0 3.891.615 4.596 1.984.42.813.439 1.448.439 2.063l-.095 6.448c0 .218.019 2.024.21 3.373h-2.193v.04zm-1.678-6.647c-.973 0-4.673 0-4.673 2.738 0 .853.515 2.341 2.689 2.341 1.24 0 2.174-.516 2.765-1.448.534-.913.572-1.667.61-3.552-.439-.04-.801-.079-1.392-.079z" id="a"/><path d="M49.366 2.98h2.422v19.385h-2.422v-19.385z"/><path d="M62.24 22.365c-.172-.675-.229-1.31-.229-2.024-1.163 2.222-2.918 2.44-4.005 2.44-2.975 0-4.577-1.746-4.577-3.968 0-1.071.362-2.798 2.27-3.948 1.392-.813 3.452-.893 4.482-.893.61 0 1.011.02 1.755.079 0-1.667 0-2.401-.458-2.976-.496-.675-1.545-.893-2.251-.893-2.46 0-2.575 1.746-2.613 2.282h-2.422c.076-.694.153-1.647.896-2.56.973-1.131 2.823-1.448 4.177-1.448 1.888 0 3.891.615 4.596 1.984.42.813.439 1.448.439 2.063l-.095 6.448c0 .218.019 2.024.21 3.373h-2.174v.04zm-1.697-6.647c-.973 0-4.673 0-4.673 2.738 0 .853.515 2.341 2.689 2.341 1.24 0 2.174-.516 2.765-1.448.534-.913.572-1.667.61-3.552-.42-.04-.782-.079-1.392-.079z"/><path d="M66.493 10.44l-.019-1.567h2.422l.019 2.183c.286-.556 1.202-2.44 4.158-2.44 1.163 0 4.692.456 4.692 4.583v9.147h-2.479v-8.571c0-.893-.095-1.687-.706-2.302-.629-.615-1.469-.913-2.289-.913-1.755 0-3.376 1.31-3.376 4.028v7.758h-2.422v-11.905z"/><path d="M78.528 8.873h2.289v-2.877l2.403-.813v3.671h2.899v1.845h-2.899v8.036c0 .675 0 1.806 1.736 1.806.496 0 .954-.079 1.163-.139v1.964c-.439.079-1.144.159-2.022.159-2.212 0-3.28-.675-3.28-2.877v-8.909h-2.289v-1.865z"/><path d="M87.816 2.98h2.918v2.817h-2.918v-2.817zm.267 5.893h2.422v13.472h-2.422v-13.472z"/><path d="M92.755 11.611c0-.913-.057-1.845-.134-2.738h2.46l.057 2.599c.458-1.885 2.022-2.5 3.09-2.659.725-.099 1.259-.079 1.678-.06v2.46c-.134-.06-.286-.079-.458-.099-.172-.02-.42-.02-.706-.02-2.861 0-3.547 1.766-3.547 4.087v7.163h-2.441v-10.734z"/><path d="M9.866-.04c-5.211 0-9.45 4.226-9.45 9.464s4.22 9.464 9.45 9.464c5.211 0 9.45-4.226 9.45-9.464s-4.24-9.464-9.45-9.464zm0 16.012c-3.606 0-6.538-2.937-6.538-6.548s2.932-6.548 6.538-6.548c3.606 0 6.538 2.937 6.538 6.548-.02 3.631-2.932 6.548-6.538 6.548zM18.306 18.056l-8.44 3.651-8.46-3.651-1.387 2.698 9.847 4.206 9.847-4.206-1.407-2.698z"/>
              <!--<![endif]-->
              </svg>
            </div>
          </a>
        </h1>
        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#main-navbar">
          <span class="sr-only">Toggle navigation</span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
      </div>

      <div class="collapse navbar-collapse" id="main-navbar">
        <ul class="nav navbar-nav">
          <li>
            <a href="/products/">Products</a>
            <ul class="dropdown-menu">
              <li><a href="/palantir-gotham/">Palantir Gotham</a></li>
              <li><a href="/palantir-metropolis/">Palantir Metropolis</a></li>
            </ul>
          </li>
          <li>
            <a href="/solutions/">Solutions</a>
            <ul class="dropdown-menu split-menu">
              
              <li><a href="/solutions/anti-fraud/" title="Anti Fraud">Anti Fraud</a></li>
              
              <li><a href="/solutions/capital-markets/" title="Capital Markets">Capital Markets</a></li>
              
              <li><a href="/solutions/case-management/" title="Case Management">Case Management</a></li>
              
              <li><a href="/disaster-preparedness/" title="Crisis Response">Crisis Response</a></li>
              
              <li><a href="/solutions/cyber/" title="Cyber Security">Cyber Security</a></li>
              
              <li><a href="/solutions/defense/" title="Defense">Defense</a></li>
              
              <li><a href="/disaster-preparedness/" title="Disaster Preparedness">Disaster Preparedness</a></li>
              
              <li><a href="/solutions/disease-response/" title="Disease Response">Disease Response</a></li>
              
              <li><a href="/solutions/healthcare-delivery/" title="Healthcare Delivery">Healthcare Delivery</a></li>
              
              <li><a href="/solutions/insider-threat/" title="Insider Threat">Insider Threat</a></li>
              
              <li><a href="/solutions/insurance-analytics" title="Insurance Analytics">Insurance Analytics</a></li>
              
              <li><a href="/solutions/intelligence/" title="Intelligence">Intelligence</a></li>
              
              <li><a href="/solutions/law-enforcement/" title="Law Enforcement">Law Enforcement</a></li>
              
              <li><a href="/solutions/legal-intelligence/" title="Legal Intelligence">Legal Intelligence</a></li>
              
              <li><a href="/solutions/palantir-verus/" title="Palantir Verus">Palantir Verus</a></li>
              
              <li><a href="/solutions/pharma/" title="Pharma R&amp;D">Pharma R&amp;D</a></li>
              
              <li><a href="/solutions/trader-oversight/" title="Trader Oversight">Trader Oversight</a></li>
              
              <li><a href="/solutions/custom-solutions/" title="Custom Solutions">Custom Solutions</a></li>
              
            </ul>
          </li>
          <li>
            <a href="/careers/">Careers</a>
            <ul class="dropdown-menu">
              
              <li><a href="/engineering-culture/" title="Engineering Culture">Engineering Culture</a></li>
              
              <li><a href="/life-at-palantir/" title="Life at Palantir">Life at Palantir</a></li>
              
              <li><a href="/getting-hired/" title="Getting Hired">Getting Hired</a></li>
              
              <li><a href="/college/" title="Students">Students</a></li>
              
              <li><a href="/careers/" title="Explore Careers">Explore Careers</a></li>
              
            </ul>
          </li>
          <li>
            <a href="/about/">About</a>
            <ul class="dropdown-menu">
              <li><a href="/what-we-believe/">What We Believe</a></li>
              <li><a href="/philanthropy-engineering/">Philanthropy Engineering</a></li>
              <li><a href="/library/">Library</a></li>
              <li><a href="/media/">Media</a></li>
            </ul>
          </li>
        </ul>
        <ul class="nav navbar-nav secondary">
          <li><a href="/contact/">Contact</a></li>
          <li><a href="/category/blogs/">Blog</a></li>
          <li class="search-form">
            <form role="search" method="get" class="search" action="/search/">
              <input id="main-search-query" type="text" name="q" value="" class="search-input search_field_main" maxlength="50" placeholder="Search Palantir">
              <input type="submit" class="search-trigger search_submit_main">
            </form>
          </li>
        </ul>
      </div><!-- /.navbar-collapse -->

    </div><!-- /.container-fluid -->
  </nav>


</header><!-- /header -->


    <div id="hero-wrapper-auto" data-image-bg='["/build/images/blog/blog-hero.jpg", "/build/images/blog/blog-hero@2x.jpg"]'>
      <div class="container">
        <div class="row block block-hero block-centered">
          <article class="col-xs-12">
            <h1 class="main"><a href="/category/blogs">The Palantir Blog</a></h1>
          </article>
        </div><!-- /.row -->
      </div><!-- /.container -->
      <div id="hero-subnav">
        <div class="container">
          <div class="row">
            <div class="col-md-8 col-md-offset-2">
              <nav>
                <ul class="blog-meta transparent">
                  <li class="blog-meta-date"><span class="icon-pt-icon-time"></span> May 27, 2009</li>
                  <li class="blog-meta-author"><span class="icon-pt-icon-person"></span> <a href="/author/dcicerone">Derek Cicerone</a></li>
                  
                  <li class="post_tags">
                    <span class="icon-pt-icon-tag"></span>
                    
                    <span class="tags"><a href="/tag/coding">coding</a></span>
                    
                    <span class="tags"><a href="/tag/swing">swing</a></span>
                    
                    <span class="tags"><a href="/tag/tips and tricks">tips and tricks</a></span>
                    
                  </li>
                  
                </ul>
              </nav>
            </div>
          </div>
        </div>
      </div>
    </div><!-- /#hero-wrapper-auto -->

    <!-- Page Content -->
    <div class="container">
      <div class="row">
        <div id="post-content" class="col-md-offset-1 col-md-7">
          <h1>Data Model Change Eventing</h1>
          <p>One of the early architectural challenges that we faced in building the <a href="http://www.palantir.com/palantir-metropolis/">Palantir Finance</a> product was coming up with a good design for firing events from data models to their listeners.  There are many different concepts in our product such as charts, portfolios, and indices which are all maintained by different developers.  Initially, each developer had their own system for firing events when a data model changed.  This quickly became a drag on development as tools became more integrated because we had to learn each others’ event methodologies and translate between the different systems.</p>

<p>The solution was to select a single event firing system.  We wanted something that was easy-to-use yet powerful enough to express all the changes that might be made to a data model.  Java’s <a href="http://java.sun.com/docs/books/tutorial/javabeans/properties/bound.html">Property Change Support</a> (PCS) was a good fit because it can support arbitrary events in a very lightweight fashion.</p>

<p>Read on for details of our implementation…</p>

<h2 id="property-change-support">Property Change Support</h2>

<p>Java’s <a href="http://java.sun.com/j2se/1.5.0/docs/api/java/beans/PropertyChangeSupport.html">PropertyChangeSupport class</a> (PCS) basically allows an object to easily fire events consisting of 4 pieces of information:</p>

<ul>
  <li>source object - the thing that fired the event</li>
  <li>property name - allows the listener to tell events for different things apart</li>
  <li>old value - the old value for the property</li>
  <li>new value - the new value for the property</li>
</ul>

<p>PCS handles all the bookkeeping for adding and removing listeners and firing events.  It is very useful for creating listenable models, but we wanted to make it just a little bit easier by having an abstract class that exposed the add/remove listener calls and took care of initializing PCS:</p>

<div class="highlight"><pre><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">AbstractListenableModel</span> <span class="kd">implements</span> <span class="n">Serializable</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">long</span> <span class="n">serialVersionUID</span> <span class="o">=</span> <span class="mi">1L</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kd">transient</span> <span class="n">PropertyChangeSupport</span> <span class="n">pcs</span><span class="o">;</span>
    <span class="kd">protected</span> <span class="nf">AbstractListenableModel</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">init</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="cm">/**</span>
<span class="cm">    * Adds a property change listener to the model.</span>
<span class="cm">    */</span>
    <span class="kd">public</span> <span class="kd">final</span> <span class="kt">void</span> <span class="nf">addPropertyChangeListener</span><span class="o">(</span><span class="n">PropertyChangeListener</span> <span class="n">listener</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">pcs</span><span class="o">.</span><span class="na">addPropertyChangeListener</span><span class="o">(</span><span class="n">listener</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="cm">/**</span>
<span class="cm">    * Removes a property change listener from the model.</span>
<span class="cm">    */</span>
    <span class="kd">public</span> <span class="kd">final</span> <span class="kt">void</span> <span class="nf">removePropertyChangeListener</span><span class="o">(</span><span class="n">PropertyChangeListener</span> <span class="n">listener</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">pcs</span><span class="o">.</span><span class="na">removePropertyChangeListener</span><span class="o">(</span><span class="n">listener</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="cm">/**</span>
<span class="cm">    * Fires a property change event to listeners of the model.</span>
<span class="cm">    */</span>
    <span class="kd">protected</span> <span class="kd">final</span> <span class="kt">void</span> <span class="nf">firePropertyChange</span><span class="o">(</span><span class="n">String</span> <span class="n">propertyName</span><span class="o">,</span> <span class="n">Object</span> <span class="n">oldValue</span><span class="o">,</span> <span class="n">Object</span> <span class="n">newValue</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">pcs</span><span class="o">.</span><span class="na">firePropertyChange</span><span class="o">(</span><span class="n">propertyName</span><span class="o">,</span> <span class="n">oldValue</span><span class="o">,</span> <span class="n">newValue</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="cm">/**</span>
<span class="cm">    * Initializes transient fields during deserialization.</span>
<span class="cm">    */</span>
    <span class="kd">protected</span> <span class="n">Object</span> <span class="nf">readResolve</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">init</span><span class="o">();</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="cm">/**</span>
<span class="cm">    * Initializes transient fields.</span>
<span class="cm">    */</span>
    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">pcs</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">PropertyChangeSupport</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre></div>

<p>AbstractListenableModel is basically just a simple wrapper for exposing the functionality of PCS.  By extending this abstract class, it’s very easy to create a listenable model:</p>

<div class="highlight"><pre><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">final</span> <span class="kd">class</span> <span class="nc">MyModel</span> <span class="kd">extends</span> <span class="n">AbstractListenableModel</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">PROP_FOO</span> <span class="o">=</span> <span class="n">MyClass</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;.Foo&quot;</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">foo</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getFoo</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">foo</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setFoo</span><span class="o">(</span><span class="kt">int</span> <span class="n">foo</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">//</span>
        <span class="c1">// The semantics of the following line are a little hard to unpack,</span>
        <span class="c1">// but it does exactly what it needs to do, and the tradeoff</span>
        <span class="c1">// for conciseness over immediate readability is worth it for</span>
        <span class="c1">// large models with lots of properties.</span>
        <span class="c1">//</span>
        <span class="c1">// First, the JVM starts to create a stack frame for the call</span>
        <span class="c1">// into firePropertyChange().  It begins binding parameter values</span>
        <span class="c1">// from the left to the right.  The pointer to the String contained</span>
        <span class="c1">// in PROP_FOO is passed in first, then the current value of</span>
        <span class="c1">// this.foo is passed in, then the expression</span>
        <span class="c1">//        this.foo = foo</span>
        <span class="c1">// is evaluated (setting this.foo to the new value of foo), which</span>
        <span class="c1">// returns the new value of foo.  All the parameters are then</span>
        <span class="c1">// passed down into firePropertyChange(), which checks whether</span>
        <span class="c1">// the oldValue is equal to the newValue.  If they&#39;re not equal,</span>
        <span class="c1">// it fires the event.  If they are equal, it ignores the event.</span>
        <span class="c1">//</span>
        <span class="k">this</span><span class="o">.</span><span class="na">firePropertyChange</span><span class="o">(</span><span class="n">PROP_FOO</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">foo</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">foo</span> <span class="o">=</span> <span class="n">foo</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre></div>

<p>In this example, MyModel contains a single property called foo.  When the value of foo is changed, a property change event will be fired to listeners of the model.</p>

<p>You may notice that the value of PROP_FOO is prefixed by the name of the class.  This ensure that naming collisions do not occur for scenarios in which the same listener is used to listen to multiple models which happen to use the same property name.  This scenario becomes much more likely in the case of event bubbling, which I’ll talk about next.</p>

<h2 id="event-bubbling">Event Bubbling</h2>

<p>Imagine a scenario in which we have a nested model:</p>

<p>Normally, if a listener needs to receive events from both models A and B, it will need to add itself as a listener to each individual model.  While this solution would work, it’s a little cumbersome, especially when model B can get swapped out for model B’—the listener then has to keep itself synched to the internal state of model A.  It would be nice if model A could just automatically forward all the events from model B (or B’) via its PCS support so that a listener only needs to attach itself to one model instead of multiple models.  With a bit more code in AbstractListenableModel, this is possible:</p>

<div class="highlight"><pre><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">AbstractListenableModel</span> <span class="kd">implements</span> <span class="n">Serializable</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="kd">transient</span> <span class="n">PropertyChangeListener</span> <span class="n">childModelListener</span><span class="o">;</span>
    <span class="o">...</span>

    <span class="cm">/**</span>
<span class="cm">    * Registers a child model to this model.</span>
<span class="cm">    */</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">registerChildModel</span><span class="o">(</span><span class="n">ListenableModel</span> <span class="n">childModel</span><span class="o">,</span> <span class="n">String</span> <span class="n">propertyName</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">childModel</span><span class="o">.</span><span class="na">addPropertyChangeListener</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">childModelListener</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="cm">/**</span>
<span class="cm">    * Initializes transient fields.</span>
<span class="cm">    */</span>
    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">()</span> <span class="o">{</span>
        <span class="o">...</span>
        <span class="k">this</span><span class="o">.</span><span class="na">childModelListener</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ChildModelListener</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="cm">/**</span>
<span class="cm">    * Listener for property change events fired from child models.</span>
<span class="cm">    */</span>
    <span class="kd">private</span> <span class="kd">final</span> <span class="kd">class</span> <span class="nc">ChildModelListener</span> <span class="kd">implements</span> <span class="n">PropertyChangeListener</span> <span class="o">{</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">propertyChange</span><span class="o">(</span><span class="n">PropertyChangeEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
            <span class="c1">// This is where the bubbling happens</span>
            <span class="n">pcs</span><span class="o">.</span><span class="na">firePropertyChange</span><span class="o">(</span><span class="n">event</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre></div>

<p>Now, whenever model B fires a property change event, this event will also be fired by model A.  This makes it much easier for the listener to listen to events arbitrarily deep in the model hierarchy, because each event fired by a child model gets re-fired (bubbled) by all its ancestors.  All you have to do is attach a listener to the root model and you’ll automatically receive events from all models in the hierarchy.</p>

<p>Note that the registerChildModel method above takes an unused propertyName argument.  In the full implementation of this class, events with the provided property name are monitored.  When an event with the provided property name is fired, childModelListener is detached from the old child model and attached to any new child model.  This ensures that the listenable model is always listening to the current child models.</p>

<h2 id="events-for-collections">Events for Collections</h2>

<p>Any model event support would not be complete without some consideration of how to handle collections such as sets and lists.  To solve this scenario, we created specialized collection classes called ListenableModelSet and ListenableModelList.  These collections hold AbstractListenableModels as their elements and fire events whenever their contents change.  Since the changes to collections can vary widely, the solution we came up for communicating collection changes with full fidelity is basically to fire events with a copy of the old set as the old value and the new set as the new value.  Listeners can then diff the old and new values to determine exactly what changed if necessary.  Additionally, each ListenableModelSet or List adds a ChildModelListener to all of its children (themselves AbstractListenableModels), thereby ensuring that events are bubbled from all models in the collection.</p>

<h2 id="conclusion">Conclusion</h2>

<p>Just as we saw with the <a href="/2009/04/model-view-adapter/">Adapter</a> piece of the <a href="http://en.wikipedia.org/wiki/Model-view-adapter">MVA</a> triad, when we <a href="http://se.ethz.ch/~meyer/publications/patterns/visitor.pdf">componentize</a> the Model piece there are huge gains to be had.  Once we started using a base Model class and a consistent eventing infrastructure (PropertyChangeSupport), we could add features that made coding across our entire application a lot more pleasant.</p>

        </div>
        <aside id="category-links" class="col-md-offset-1 col-md-3">
          <h4>Categories</h4>
          <nav id="blog-category-list">
  <ul>
  
    <li class="blog-category tech"><a href="/category/tech/" name="Tech">Tech</a></li>
  
    <li class="blog-category analysis"><a href="/category/analysis/" name="Analysis">Analysis</a></li>
  
    <li class="blog-category news-events"><a href="/category/news-events/" name="News &amp; Events">News &amp; Events</a></li>
  
    <li class="blog-category philanthropy"><a href="/category/philanthropy/" name="Philanthropy">Philanthropy</a></li>
  
    <li class="blog-category pcl"><a href="/category/pcl/" name="P/CL">P/CL</a></li>
  
  </ul>
</nav>

          <h4>Save &amp; Share</h4>
          
<nav id="blog-share">
  <ul>
    <li><a href="/feed/index.xml" class="button button-small no-arrow"><span class="icon-pt-icon-feed"></span> Subscribe via RSS</a></li>
    <li><div class="fb-share-button" data-href="https://palantir.com/2009/05/data-model-change-eventing" data-type="button_count"></div></li>
    <li><a href="https://twitter.com/share" class="twitter-share-button" data-via="twitterapi" data-lang="en">Tweet</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="https://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script></li>
  </ul>
</nav>

        </aside>
      </div>
    </div>

    <!-- Footer -->
    <footer class="" role="contentinfo">

  <div class="container">
        <div class="row">
          <nav id="products" class="col-sm-2 footer-menu">
            <h2><a href="/products">Products</a></h2>
            <ul id="menu-products">
              <li><a href="/palantir-gotham/" title="Palantir Gotham">Palantir Gotham</a></li>
              <li><a href="/palantir-metropolis/" title="Palantir Metropolis">Palantir Metropolis</a></li>
            </ul>
          </nav>

          <nav id="uses" class="col-sm-4 footer-menu">
            <h2><a href="/solutions">Solutions</a></h2>
            <ul id="menu-uses">
              
              <li><a href="/solutions/anti-fraud/" title="Anti Fraud">Anti Fraud</a></li>
              
              <li><a href="/solutions/capital-markets/" title="Capital Markets">Capital Markets</a></li>
              
              <li><a href="/solutions/case-management/" title="Case Management">Case Management</a></li>
              
              <li><a href="/disaster-preparedness/" title="Crisis Response">Crisis Response</a></li>
              
              <li><a href="/solutions/cyber/" title="Cyber Security">Cyber Security</a></li>
              
              <li><a href="/solutions/defense/" title="Defense">Defense</a></li>
              
              <li><a href="/disaster-preparedness/" title="Disaster Preparedness">Disaster Preparedness</a></li>
              
              <li><a href="/solutions/disease-response/" title="Disease Response">Disease Response</a></li>
              
              <li><a href="/solutions/healthcare-delivery/" title="Healthcare Delivery">Healthcare Delivery</a></li>
              
              <li><a href="/solutions/insider-threat/" title="Insider Threat">Insider Threat</a></li>
              
              <li><a href="/solutions/insurance-analytics" title="Insurance Analytics">Insurance Analytics</a></li>
              
              <li><a href="/solutions/intelligence/" title="Intelligence">Intelligence</a></li>
              
              <li><a href="/solutions/law-enforcement/" title="Law Enforcement">Law Enforcement</a></li>
              
              <li><a href="/solutions/legal-intelligence/" title="Legal Intelligence">Legal Intelligence</a></li>
              
              <li><a href="/solutions/palantir-verus/" title="Palantir Verus">Palantir Verus</a></li>
              
              <li><a href="/solutions/pharma/" title="Pharma R&amp;D">Pharma R&amp;D</a></li>
              
              <li><a href="/solutions/trader-oversight/" title="Trader Oversight">Trader Oversight</a></li>
              
              <li><a href="/solutions/custom-solutions/" title="Custom Solutions">Custom Solutions</a></li>
              
            </ul>
          </nav>

          <nav id="people" class="col-sm-2 footer-menu">
            <h2><a href="/careers/">Careers</a></h2>
            <ul id="menu-people" class="">
              
              <li><a href="/engineering-culture/" title="Engineering Culture">Engineering Culture</a></li>
              
              <li><a href="/life-at-palantir/" title="Life at Palantir">Life at Palantir</a></li>
              
              <li><a href="/getting-hired/" title="Getting Hired">Getting Hired</a></li>
              
              <li><a href="/college/" title="Students">Students</a></li>
              
              <li><a href="/careers/" title="Explore Careers">Explore Careers</a></li>
              
            </ul>
          </nav>

          <nav id="about" class="col-sm-2 footer-menu">
            <h2><a href="/about">About</a></h2>
            <ul id="menu-about">
              <li><a href="/what-we-believe/">What We Believe</a></li>
              <li><a href="/philanthropy-engineering/">Philanthropy Engineering</a></li>
              <li><a href="/library/">Library</a></li>
              <li><a href="/media/">Media</a></li>
            </ul>
          </nav>

          <nav id="ancillary-menu" class="col-sm-2 footer-menu">
            <ul id="menu-ancillary">
              <li><a href="https://support.palantir.com/">Support Portal</a></li>
              <li><a href="/partnerships/">Partnerships</a></li>
              <li><a href="/site-map/">Site Map</a></li>
            </ul>
          </nav>
        </div><!-- /.row -->

        <div id="footer-copyright" class="row">
          <div class="col-sm-12 sub-footer">
            <span class="legalese">&copy; 2015 Palantir Technologies</span>
            <a class="legalese" href="/terms-and-conditions/">Terms of Use</a>
            <a class="legalese" href="/privacy-and-security/">Privacy and Security Statement</a>
            <ul class="social">
              <li><a href="https://www.facebook.com/Palantir" class="icon-pt-icon-facebook"></a></li>
              <li><a href="https://www.twitter.com/palantirtech" class="icon-pt-icon-twitter"></a></li>
              <li><a href="https://plus.google.com/106671163751935200511" rel="publisher" class="icon-pt-icon-gplus"></a></li>
              <li><a href="https://www.github.com/Palantir" class="icon-pt-icon-github"></a></li>
              <li><a href="https://www.youtube.com/user/Palantir" class="icon-pt-icon-youtube"></a></li>
            </ul>
          </div>
        </div><!-- /.row -->

  </div><!-- /.container -->

</footer><!-- /footer -->

  </div><!-- /#site-wrapper -->

  <!-- compiled.min -->
  <script src="/build/js/compiled.min.js?v=20150629162924"></script>

  
<!-- Google Analytics -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-380822-1', 'none');
  ga('send', 'pageview');
</script>


  <script>
  window['_fs_debug'] = false;
  window['_fs_host'] = 'www.fullstory.com';
  window['_fs_org'] = 'Vcq';
  (function(m,n,e,t,l,o,g,y){
    g=m[e]=function(a,b){g.q?g.q.push([a,b]):g._api(a,b);};g.q=[];
    o=n.createElement(t);o.async=1;o.src='https://'+_fs_host+'/s/fs.js';
    y=n.getElementsByTagName(t)[0];y.parentNode.insertBefore(o,y);
    g.identify=function(i,v){g(l,{uid:i});if(v)g(l,v)};g.setUserVars=function(v){FS(l,v)};
    g.clearUserCookie=function(d,i){d=n.domain;while(1){n.cookie='fs_uid=;domain='+d+
    ';path=/;expires='+new Date(0);i=d.indexOf('.');if(i<0)break;d=d.slice(i+1)}}
  })(window,document,'FS','script','user');
</script>

</body>
</html>
